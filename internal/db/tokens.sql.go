// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tokens.sql

package db

import (
	"context"
	"time"
)

const deleteToken = `-- name: DeleteToken :exec
DELETE FROM tokens 
WHERE scope = $1 AND user_id = $2
`

type DeleteTokenParams struct {
	Scope  string `json:"scope"`
	UserID int64  `json:"user_id"`
}

func (q *Queries) DeleteToken(ctx context.Context, arg DeleteTokenParams) error {
	_, err := q.db.ExecContext(ctx, deleteToken, arg.Scope, arg.UserID)
	return err
}

const insertToken = `-- name: InsertToken :exec
INSERT INTO tokens (hash, user_id, expiry, scope) 
VALUES ($1, $2, $3, $4)
`

type InsertTokenParams struct {
	Hash   []byte    `json:"hash"`
	UserID int64     `json:"user_id"`
	Expiry time.Time `json:"expiry"`
	Scope  string    `json:"scope"`
}

func (q *Queries) InsertToken(ctx context.Context, arg InsertTokenParams) error {
	_, err := q.db.ExecContext(ctx, insertToken,
		arg.Hash,
		arg.UserID,
		arg.Expiry,
		arg.Scope,
	)
	return err
}
